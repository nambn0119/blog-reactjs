{"ast":null,"code":"import axios from 'axios';\n// import 'dotenv/config';\n// require('dotenv').config()\n\nexport default function requestApi(endpoint, method, body, responseType = 'json') {\n  const headers = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  };\n  const instace = axios.create({\n    headers\n  });\n  instace.interceptors.request.use(config => {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n  instace.interceptors.response.use(response => {\n    return response;\n  }, async error => {\n    const originalConfig = error.config;\n    console.log('Access token expired');\n    if (error.response && error.response.status === 419) {\n      try {\n        console.log('call refresh token api');\n        const result = await instace.post(`http://localhost:8000/auth/refresh-token`, {\n          refresh_token: localStorage.getItem('refresh_token')\n        });\n        const {\n          access_token,\n          refresh_token\n        } = result.data;\n        localStorage.setItem('access_token', access_token);\n        localStorage.setItem('refresh_token', refresh_token);\n        originalConfig.headers['Authorization'] = `Bearer ${access_token}`;\n        return instace(originalConfig);\n      } catch (error) {\n        if (error.response && error.response.status === 400) {\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('refresh_token');\n          window.location.href = '/login';\n        }\n        return Promise.reject(error);\n      }\n    }\n  });\n  return instace.request({\n    method: method,\n    url: `${'http://localhost:8000'}${endpoint}`,\n    // url: `${ process.env.REACT_APP_API_URL }${ endpoint }`,\n    data: body,\n    responseType: responseType\n  });\n}","map":{"version":3,"names":["axios","requestApi","endpoint","method","body","responseType","headers","instace","create","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","originalConfig","console","log","status","result","post","refresh_token","access_token","data","setItem","removeItem","window","location","href","url"],"sources":["/Users/mac/Documents/Workspace/NextJs/Blog/blog-reactjs/src/helpers/api.js"],"sourcesContent":["import axios from 'axios';\n// import 'dotenv/config';\n// require('dotenv').config()\n\n\nexport default function requestApi(endpoint, method, body, responseType = 'json') {\n  const headers = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  }\n\n  const instace = axios.create({ headers });\n\n  instace.interceptors.request.use(\n    (config) => {\n      const token = localStorage.getItem('access_token')\n      if (token) {\n        config.headers['Authorization'] = `Bearer ${ token }`\n      }\n      return config;\n    },\n    (error) => {\n      return Promise.reject(error)\n    }\n  );\n\n  instace.interceptors.response.use(\n    (response) => {\n      return response;\n    },\n    async (error) => {\n      const originalConfig = error.config;\n      console.log('Access token expired');\n      if (error.response && error.response.status === 419) {\n        try {\n          console.log('call refresh token api');\n          const result = await instace.post(`http://localhost:8000/auth/refresh-token`, {\n            refresh_token: localStorage.getItem('refresh_token')\n          })\n          const { access_token, refresh_token } = result.data;\n          localStorage.setItem('access_token', access_token);\n          localStorage.setItem('refresh_token', refresh_token);\n          originalConfig.headers['Authorization'] = `Bearer ${ access_token }`;\n\n          return instace(originalConfig)\n        } catch (error) {\n          if (error.response && error.response.status === 400) {\n            localStorage.removeItem('access_token');\n            localStorage.removeItem('refresh_token');\n            window.location.href = '/login'\n          }\n          return Promise.reject(error);\n        }\n      }\n    }\n  )\n\n  return instace.request({\n    method: method,\n    url: `${ 'http://localhost:8000' }${ endpoint }`,\n    // url: `${ process.env.REACT_APP_API_URL }${ endpoint }`,\n    data: body,\n    responseType: responseType\n  })\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;;AAGA,eAAe,SAASC,UAAUA,CAACC,QAAQ,EAAEC,MAAM,EAAEC,IAAI,EAAEC,YAAY,GAAG,MAAM,EAAE;EAChF,MAAMC,OAAO,GAAG;IACd,QAAQ,EAAE,kBAAkB;IAC5B,cAAc,EAAE,kBAAkB;IAClC,6BAA6B,EAAE;EACjC,CAAC;EAED,MAAMC,OAAO,GAAGP,KAAK,CAACQ,MAAM,CAAC;IAAEF;EAAQ,CAAC,CAAC;EAEzCC,OAAO,CAACE,YAAY,CAACC,OAAO,CAACC,GAAG,CAC7BC,MAAM,IAAK;IACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAClD,IAAIF,KAAK,EAAE;MACTD,MAAM,CAACN,OAAO,CAAC,eAAe,CAAC,GAAI,UAAUO,KAAO,EAAC;IACvD;IACA,OAAOD,MAAM;EACf,CAAC,EACAI,KAAK,IAAK;IACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAC9B,CACF,CAAC;EAEDT,OAAO,CAACE,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC9BQ,QAAQ,IAAK;IACZ,OAAOA,QAAQ;EACjB,CAAC,EACD,MAAOH,KAAK,IAAK;IACf,MAAMI,cAAc,GAAGJ,KAAK,CAACJ,MAAM;IACnCS,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnC,IAAIN,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;MACnD,IAAI;QACFF,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrC,MAAME,MAAM,GAAG,MAAMjB,OAAO,CAACkB,IAAI,CAAE,0CAAyC,EAAE;UAC5EC,aAAa,EAAEZ,YAAY,CAACC,OAAO,CAAC,eAAe;QACrD,CAAC,CAAC;QACF,MAAM;UAAEY,YAAY;UAAED;QAAc,CAAC,GAAGF,MAAM,CAACI,IAAI;QACnDd,YAAY,CAACe,OAAO,CAAC,cAAc,EAAEF,YAAY,CAAC;QAClDb,YAAY,CAACe,OAAO,CAAC,eAAe,EAAEH,aAAa,CAAC;QACpDN,cAAc,CAACd,OAAO,CAAC,eAAe,CAAC,GAAI,UAAUqB,YAAc,EAAC;QAEpE,OAAOpB,OAAO,CAACa,cAAc,CAAC;MAChC,CAAC,CAAC,OAAOJ,KAAK,EAAE;QACd,IAAIA,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;UACnDT,YAAY,CAACgB,UAAU,CAAC,cAAc,CAAC;UACvChB,YAAY,CAACgB,UAAU,CAAC,eAAe,CAAC;UACxCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;QACjC;QACA,OAAOhB,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;MAC9B;IACF;EACF,CACF,CAAC;EAED,OAAOT,OAAO,CAACG,OAAO,CAAC;IACrBP,MAAM,EAAEA,MAAM;IACd+B,GAAG,EAAG,GAAG,uBAAyB,GAAGhC,QAAU,EAAC;IAChD;IACA0B,IAAI,EAAExB,IAAI;IACVC,YAAY,EAAEA;EAChB,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}